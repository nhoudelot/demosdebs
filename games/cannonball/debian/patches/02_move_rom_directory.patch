--- a/src/main/romloader.cpp
+++ b/src/main/romloader.cpp
@@ -57,7 +57,7 @@
     chdir(bundlepath);
 #endif
 
-    std::string path = "roms/";
+    std::string path = "/usr/share/games/cannonball/rom/";
     path += std::string(filename);
 
     // Open rom file
@@ -145,4 +145,4 @@
     int size = (int) in.tellg();
     in.close();
     return size; 
-}
\ No newline at end of file
+}
--- a/cmake/debian.cmake
+++ b/cmake/debian.cmake
@@ -1,23 +1,28 @@
 # Default CMake Setup. Used for Debian Builds.
 
 set(lib_base /usr/include)
-set(sdl_root ${lib_base}/SDL)
-
-set_target_properties(sdl PROPERTIES SKIP_BUILD_RPATH TRUE)
+set(sdl_root ${lib_base}/SDL2)
 
 include_directories("${sdl_root}")
 
 link_libraries(cannonball 
-    SDL
-    SDLmain
+    SDL2
+    GL
 )
 
 # Linking
 link_directories(
     "${sdl_root}/lib"
 )
+
+add_definitions(-O3 -DSDL2 -DWITH_OPENGL)
+#add_definitions(-O0 -ggdb -DSDL2 -DWITH_OPENGL)
  
 # Location for Cannonball to create save files
 # Used to auto-generate setup.hpp with various file paths
-set(xml_directory ./)
-set(sdl_flags "SDL_DOUBLEBUF | SDL_SWSURFACE")
+set(xml_directory /tmp/cannonball/)
+set(sdl_flags "SDL_WINDOW_RESIZABLE")
+
+# Set SDL2 instead of SDL1
+set(SDL2 1)
+set(OPENGL 1)
--- a/src/main/engine/omusic.cpp
+++ b/src/main/engine/omusic.cpp
@@ -39,13 +39,13 @@
     if (tilemap == NULL)
     {
         tilemap = new RomLoader();
-        status += tilemap->load_binary("res/tilemap.bin");
+        status += tilemap->load_binary("/usr/share/games/cannonball/res/tilemap.bin");
     }
 
     if (tile_patch == NULL)
     {
         tile_patch = new RomLoader();
-        status += tile_patch->load_binary("res/tilepatch.bin");
+        status += tile_patch->load_binary("/usr/share/games/cannonball/res/tilepatch.bin");
     }
 
     return status == 0;
