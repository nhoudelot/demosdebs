--- a/src/swamp_fly.c
+++ b/src/swamp_fly.c
@@ -155,6 +155,8 @@
 	"SDL_GL_DeleteContext\0"
 	"SDL_DestroyWindow\0"
 	"SDL_GetWindowID\0"
+	"SDL_GetWindowFlags\0"
+	"SDL_SetWindowFullscreen\0"
 	"SDL_ShowCursor\0\0";
 
 #define dsinf sinf
@@ -195,6 +197,8 @@
 #define DDL_GL_DeleteContext SDL_GL_DeleteContext
 #define DDL_DestroyWindow SDL_DestroyWindow
 #define DDL_GetWindowID SDL_GetWindowID
+#define DDL_GetWindowFlags SDL_GetWindowFlags
+#define DDL_SetWindowFullscreen SDL_SetWindowFullscreen
 #define DDL_ShowCursor SDL_ShowCursor
 #define DDL_Quit SDL_Quit
 
@@ -267,6 +271,12 @@
 	dlViewport(x, y, w, h);
 }
 
+IFUNCTION void ToggleFullscreen(SDL_Window* Window) {
+	Uint32 FullscreenFlag = SDL_WINDOW_FULLSCREEN;
+	int IsFullscreen = SDL_GetWindowFlags(Window) & FullscreenFlag;
+	DDL_SetWindowFullscreen(Window, IsFullscreen ? 0 : FullscreenFlag);
+	DDL_ShowCursor(IsFullscreen);
+}
 
 //######################################
 // rand() ##############################
@@ -1393,6 +1403,7 @@
 			if (event.type == SDL_KEYUP) {
 				switch (event.key.keysym.sym) {
 				case SDLK_SPACE:printf("Ticks: %i\n", currtick); break;
+				case SDLK_f: ToggleFullscreen(sdlWindow); break;
 				case SDLK_ESCAPE: quit++; break;
 				case SDLK_q: quit++; break;
 				}
