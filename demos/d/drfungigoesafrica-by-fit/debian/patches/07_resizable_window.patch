--- a/main.c
+++ b/main.c
@@ -15,6 +15,9 @@
 #define HIT 18
 #define KICKBASS 19
 
+#define DEMO_XASPECT 4.0f
+#define DEMO_YASPECT 3.0f
+
 #define LASTRIG aikaa_siita_kun_viimeksi_tavattu
 extern volatile int aikaa_siita_kun_viimeksi_tavattu[];
 extern unsigned int pt_songpos;
@@ -29,6 +32,8 @@
 void rinkula(float);
 float musasynk(int,float);
 
+void resize_window(int x, int y, int w, int h);
+
 extern unsigned int pt_songpos;
 
 int main(int argc,char *argv[])
@@ -120,6 +125,7 @@
 		;
 
 	alku=SDL_GetTicks();
+	Uint32 windowID = SDL_GetWindowID(sdlWindow);
 	while(!quit)
 	{
 		tid=SDL_GetTicks()-alku;
@@ -497,6 +503,16 @@
 					case SDLK_q: quit=1; break;
 				}
 			}
+			if(e.type == SDL_WINDOWEVENT)
+			{
+				if (e.window.windowID == windowID)  {
+					if (e.window.event == SDL_WINDOWEVENT_RESIZED)  {
+						int new_w = e.window.data1;
+						int new_h = e.window.data2;
+						resize_window(0,0, new_w,new_h);
+					}
+				}
+			}
 		}
 	}
 
@@ -507,6 +523,26 @@
 	return(EXIT_SUCCESS);
 }
 
+void resize_window(int x, int y, int w, int h)
+{
+	/* Prevent division by zero */
+	if (h == 0) {
+		h = 1;
+	}
+
+	float aspect = (float)w / (float)h;
+	if (aspect > DEMO_XASPECT / DEMO_YASPECT) {
+		int new_w = (int)((float)h * DEMO_XASPECT / DEMO_YASPECT);
+		x += (w - new_w) / 2;
+		w = new_w;
+	} else if (aspect < DEMO_XASPECT / DEMO_YASPECT) {
+		int new_h = (int)((float)w * DEMO_YASPECT / DEMO_XASPECT);
+		y += (h - new_h) / 2;
+		h = new_h;
+	}
+	glViewport(x, y, w, h);
+}
+
 void rinkula(float ker)
 {
 	float r;
