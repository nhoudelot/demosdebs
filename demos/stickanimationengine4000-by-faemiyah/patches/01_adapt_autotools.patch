--- a/configure.ac
+++ b/configure.ac
@@ -1,4 +1,4 @@
-AC_INIT([sae4], [1.0.0], [trilkk@faemiyah.fi])
+AC_INIT([stickanimationengine4000-by-faemiyah],[1.0.0],[trilkk@faemiyah.fi])
 
 AC_CANONICAL_BUILD
 AC_CANONICAL_HOST
@@ -6,15 +6,19 @@
 
 AM_INIT_AUTOMAKE([dist-bzip2])
 
-AC_PROG_CPP
+# Checks for programs.
 AC_PROG_CXX
+AC_PROG_AWK
+AC_PROG_CC
+AC_PROG_CPP
 AC_PROG_INSTALL
-AC_PROG_LIBTOOL
 AC_PROG_LN_S
+AC_PROG_LIBTOOL
 AC_PROG_MAKE_SET
-AC_PROG_RANLIB
+LT_INIT
+
 
-AC_REQUEST_C99([SAE4_C99], [yes])
+AC_CHECK_C99([SAE4_C99], [yes])
 
 AC_COMPILE_MODE([SAE4_DEBUG])
 AC_CONDITIONAL_DEFINE([SAE4_GNU_LD], [yes])
@@ -25,6 +29,9 @@
 AC_CONDITIONAL_DEFINE([SAE4_BIG_ENDIAN], [$bigendian])
 AC_CONDITIONAL_DEFINE([SAE4_LITTLE_ENDIAN], [$littleendian])
 
+# Checks for header files.
+AC_CHECK_HEADERS([fcntl.h])
+AC_CHECK_HEADERS([sys/socket.h])
 AC_CHECK_HEADER([inttypes.h],
 								[AC_DEFINE([SAE4_HAVE_INTTYPES_H],
 													 [],
@@ -42,10 +49,21 @@
 								[])
 
 
+# Checks for typedefs, structures, and compiler characteristics.
+AC_TYPE_INT16_T
+AC_TYPE_INT8_T
+AC_TYPE_UINT32_T
+AC_TYPE_UINT8_T
+AC_ADD_CCFLAG([-flto])
+AC_ADD_LDFLAG([-flto])
+AC_ADD_LIB([-lm])
+
 AC_INCORPORATE_OPENGL([SAE4_OPENGL], [yes])
 AC_INCORPORATE_GLUT([SAE4_FREEGLUT], [yes])
 AC_INCORPORATE_SDL([1.2.7], [SAE4_SDL], [yes])
 
+# Checks for library functions.
+AC_CHECK_FUNCS([select])
 
 # Not using config.h
 #AC_SPECIFIC_HEADER([src/config.h],
--- a/acinclude.m4
+++ b/acinclude.m4
@@ -161,8 +161,13 @@
 	fi
 ])
 
-dnl Enables or disables selected compiler flags.
-dnl AC_DEBUG_MODE([DEBUG_DEFINE])
+
+# Enables or disables selected compiler flags.
+# Compilers CC and CXX, if needed, need to be probed prior to entry.
+# If parameter given, use it as additional linker flags probed regardless
+# of compilation mode. Use this if some features are hard or impossible to
+# test normally.
+# AC_DEBUG_MODE([EXTRA_LINKER_FLAGS])
 AC_DEFUN([AC_COMPILE_MODE],
 [
   AC_MSG_CHECKING([for compilation mode])
@@ -181,63 +186,131 @@
     optimizations=[no],
     optimizations=[yes])
 
-	if test x$debug == xyes ; then
-		optimizations=[no]
-	fi
-
-	AC_CONDITIONAL_DEFINE([$1], [$debug])
-
-	if test x$debug != xno ; then
-  	AC_MSG_RESULT([debug])
-		AC_CHECK_CFLAG([-O0])
-		AC_CHECK_CFLAG([-g])
-	elif test x$optimizations != xno ; then
-  	AC_MSG_RESULT([optimized])
-		AC_CHECK_CFLAG([-O3])
-		AC_CHECK_CFLAG([-ffast-math])
-		AC_CHECK_CFLAG([-fsingle-precision-constant])
-	else
-  	AC_MSG_RESULT([normal])
-		AC_CHECK_CFLAG([-O2])
-	fi
-	AC_CHECK_CFLAG([-pipe])
-	if test x$debug == xno ; then
-		AC_CHECK_CFLAG([-fomit-frame-pointer])
-		AC_CHECK_LDFLAG([-s])
-	fi
-	if test x$debug$optimizations != xnono ; then
-		AC_CHECK_CFLAG([-Wall])
-		AC_CHECK_CFLAG([-Wconversion])
-		AC_CHECK_CFLAG([-Wdisabled-optimization])
-		AC_CHECK_CFLAG([-Wextra])
-		AC_CHECK_CFLAG([-Winit-self])
-		AC_CHECK_CFLAG([-Winline])
-		AC_CHECK_CCFLAG([-Wmissing-declarations])
-		AC_CHECK_CFLAG([-Wmissing-include-dirs])
-		AC_CHECK_CCFLAG([-Wmissing-prototypes])
-		AC_CHECK_CXXFLAG([-Wold-style-cast])
-		AC_CHECK_CCFLAG([-Wold-style-definition])
-		AC_CHECK_CXXFLAG([-Woverloaded-virtual])
-		AC_CHECK_CFLAG([-Wshadow])
-		AC_CHECK_CFLAG([-Wstrict-aliaising=2])
-		AC_CHECK_CCFLAG([-Wstrict-prototypes])
-		AC_CHECK_CFLAG([-Wswitch-default])
-	fi
-	if test x$debug$optimizations == xnoyes ; then
-		AC_CHECK_CFLAG([-ftracer])
-		AC_CHECK_CFLAG([-fweb])
-	fi
-
-	AC_CHECK_HEADER_DIRECTORY([/opt/include])
-	AC_CHECK_LIBRARY_DIRECTORY([/opt/lib])
-	AC_CHECK_HEADER_DIRECTORY([/opt/local/include])
-	AC_CHECK_LIBRARY_DIRECTORY([/opt/local/lib])
-	AC_CHECK_HEADER_DIRECTORY([/sw/include])
-	AC_CHECK_LIBRARY_DIRECTORY([/sw/lib])
-	AC_CHECK_HEADER_DIRECTORY([/usr/local/include])
-	AC_CHECK_LIBRARY_DIRECTORY([/usr/local/lib])
-	AC_CHECK_HEADER_DIRECTORY([/usr/X11R6/include])
-	AC_CHECK_LIBRARY_DIRECTORY([/usr/X11R6/lib])
+  if test "x$debug" = "xyes" ; then
+    optimizations=[no]
+    ndebug=[no]
+  else
+    ndebug=[yes]
+  fi
+
+  AC_CONDITIONAL_DEFINE([DEBUG], [$debug])
+  AC_CONDITIONAL_DEFINE([NDEBUG], [$ndebug])
+
+  # Clang needs these to not clutter everything.
+  AC_CHECK_CFLAG([-Werror=unused-command-line-argument])
+  AC_CHECK_CFLAG([-Werror=unknown-warning-option])
+
+  if test x$debug != xno ; then
+    AC_MSG_RESULT([debug])
+    AC_CHECK_CFLAG([-O0])
+    AC_CHECK_CFLAG([-g])
+    AC_CHECK_CFLAG([-funit-at-a-time])
+    AC_CHECK_CXXFLAG([-Wold-style-cast]) # Creates clutter otherwise.
+  elif test x$optimizations != xno ; then
+    AC_MSG_RESULT([optimized])
+    AC_CHECK_CFLAG([-O3])
+    AC_CHECK_CFLAG([-ffast-math])
+    # AC_CHECK_CFLAG([-fcx-limited-range]) # begin -ffast-math
+    # AC_CHECK_CFLAG([-ffinite-math-only])
+    # AC_CHECK_CFLAG([-fno-math-errno])
+    # AC_CHECK_CFLAG([-fno-rounding-math])
+    # AC_CHECK_CFLAG([-fno-signaling-nans])
+    # AC_CHECK_CFLAG([-fno-trapping-math])
+    # AC_CHECK_CFLAG([-funsafe-math-optimizations]) # may break something
+    AC_CHECK_CFLAG([-fgcse-las])
+    AC_CHECK_CFLAG([-fgcse-sm])
+    # AC_CHECK_CFLAG([-flto])
+    AC_CHECK_CFLAG([-fsee])
+    AC_CHECK_CFLAG([-fsingle-precision-constant])
+    # AC_CHECK_LDFLAG([-flto])
+  else
+    AC_MSG_RESULT([normal])
+    AC_CHECK_CFLAG([-O2])
+  fi
+  if test "x$debug" = "xno" ; then
+    AC_CHECK_CFLAG([-fomit-frame-pointer])
+    AC_CHECK_LDFLAG([-s])
+  fi
+  if test "x$debug$optimizations" != "xnono" ; then
+    AC_CHECK_CFLAG([-fdiagnostics-show-option])
+    AC_CHECK_CFLAG([-Wall])
+    AC_CHECK_CFLAG([-Wcast-align])
+    AC_CHECK_CFLAG([-Wconversion])
+    # AC_CHECK_CFLAG([-Wdisabled-optimization])
+    AC_CHECK_CFLAG([-Wextra])
+    AC_CHECK_CFLAG([-Winit-self])
+    # AC_CHECK_CFLAG([-Winline])
+    AC_CHECK_CFLAG([-Winvalid-pch])
+    AC_CHECK_CFLAG([-Wlogical-op])
+    AC_CHECK_CFLAG([-Wmissing-format-attribute])
+    AC_CHECK_CFLAG([-Wmissing-include-dirs])
+    # AC_CHECK_CFLAG([-Wmissing-noreturn])
+    AC_CHECK_CFLAG([-Wpacked])
+    AC_CHECK_CFLAG([-Wredundant-decls])
+    AC_CHECK_CFLAG([-Wshadow])
+    # AC_CHECK_CFLAG([-Wstrict-overflow=5])
+    AC_CHECK_CFLAG([-Wswitch-default])
+    # AC_CHECK_CFLAG([-Wswitch-enum])
+    AC_CHECK_CFLAG([-Wwrite-strings])
+    AC_CHECK_CFLAG([-Wundef])
+    # AC_CHECK_CFLAG([-Wunsafe-loop-optimizations])
+    AC_CHECK_CCFLAG([-Wbad-function-cast])
+    AC_CHECK_CCFLAG([-Wmissing-declarations])
+    AC_CHECK_CCFLAG([-Wmissing-prototypes])
+    AC_CHECK_CCFLAG([-Wnested-externs])
+    AC_CHECK_CCFLAG([-Wold-style-definition])
+    AC_CHECK_CCFLAG([-Wstrict-prototypes])
+    AC_CHECK_CXXFLAG([-Wctor-dtor-privacy])
+    AC_CHECK_CXXFLAG([-Werror=non-virtual-dtor])
+    AC_CHECK_CXXFLAG([-Woverloaded-virtual])
+  fi
+  AC_CHECK_CFLAG([-ftracer])
+  AC_CHECK_CFLAG([-fweb])
+  AC_CHECK_CFLAG([-pipe])
+  AC_CHECK_CFLAG([-Werror=return-type])
+  AC_CHECK_CCFLAG([-Werror-implicit-function-declaration])
+
+  if test "x$1" != "x" ; then
+    AC_CHECK_LDFLAG([$1])
+  fi
+
+  AC_ARG_WITH(
+      [auto-arch],
+      AC_HELP_STRING(
+        [--without-auto-arch],
+        [do not autodetect architecture to compile form, architecture can be manually specified with CPUTYPE=arch]),
+       [with_arch=no],
+       [with_arch=auto])
+  AC_MSG_CHECKING([for cpu architecture])
+  if test "x$with_arch" != "xauto" ; then
+    if test "x$CPUTYPE" != "x" ; then
+      AC_MSG_RESULT([user-defined])
+      AC_CHECK_CFLAG([-march=$CPUTYPE])
+    else
+      AC_MSG_RESULT([default])
+    fi
+  else
+    AC_MSG_RESULT([autodetect])
+    AC_CHECK_CFLAG([-march=native])
+  fi
+
+  usr_local_is_system=[no]
+
+  osname=`uname`
+  if test "x$osname" = "xFreeBSD" ; then
+    usr_local_is_system=[yes]
+  fi
+
+  AC_CHECK_HEADER_DIRECTORY([/opt/include])
+  AC_CHECK_LIBRARY_DIRECTORY([/opt/lib])
+  AC_CHECK_HEADER_DIRECTORY([/opt/local/include])
+  AC_CHECK_LIBRARY_DIRECTORY([/opt/local/lib])
+  AC_CHECK_HEADER_DIRECTORY([/sw/include])
+  AC_CHECK_LIBRARY_DIRECTORY([/sw/lib])
+  AC_CHECK_HEADER_DIRECTORY([/usr/local/include], [$usr_local_is_system])
+  AC_CHECK_LIBRARY_DIRECTORY([/usr/local/lib])
+  AC_CHECK_HEADER_DIRECTORY([/usr/X11R6/include])
+  AC_CHECK_LIBRARY_DIRECTORY([/usr/X11R6/lib])
 ])
 
 dnl Enables or disables tests.
@@ -364,78 +437,54 @@
 		[$3])
 ])
 
-dnl Incorporate SDL.
-dnl AC_INCORPORATE_SDL([version], [define on found], [obligatory])a
+# Incorporate SDL.
+# AC_INCORPORATE_SDL([version], [define on found], [obligatory])
 AC_DEFUN([AC_INCORPORATE_SDL],
 [
-	AM_PATH_SDL([$1],
-		sdl=[yes],
-		sdl=[no])
-	AC_INCORPORATE([SDL], [$sdl], [$SDL_CFLAGS], [$SDL_LIBS], [$2], [$3])
+  AM_PATH_SDL([$1],
+    sdl=[yes],
+    sdl=[no])
+  AC_INCORPORATE([SDL], [$sdl], [$SDL_CFLAGS], [$SDL_LIBS], [$2], [$3])
 ])
 
-dnl Incorporate OpenGL.
-dnl This means both libGL and libGLU.
-dnl AC_INCORPORATE_OPENGL([define on found], [obligatory])
+# Incorporate OpenGL.
+# This means both libGL and libGLU.
+# AC_INCORPORATE_OPENGL([define on found], [obligatory])
 AC_DEFUN([AC_INCORPORATE_OPENGL],
 [
-	AC_LANG_PUSH([C])
-	AC_SEARCH_LIBS([glFrustum],
-		[GL],
-		gl=[yes],
-		gl=[no])
-	AC_SEARCH_LIBS([gluPerspective],
-		[GLU],
-		glu=[yes],
-		glu=[no])
-	AC_MSG_CHECKING([if OpenGL is ok])
-	if test x$gl == xyes ; then
-		if test x$glu == xyes ; then
-			AC_MSG_RESULT([yes])
-			AC_CONDITIONAL_DEFINE([$1], [yes])
-		elif test x$2 == xyes ; then
-			AC_MSG_ERROR([no])
-			AC_CONDITIONAL_DEFINE([$1], [no])
-		else
-			AC_MSG_RESULT([no])
-			AC_CONDITIONAL_DEFINE([$1], [no])
-		fi
-	elif test x$2 == xyes ; then
-		AC_MSG_ERROR([no])
-		AC_CONDITIONAL_DEFINE([$1], [no])
-	else
-		AC_MSG_RESULT([no])
-		AC_CONDITIONAL_DEFINE([$1], [no])
-	fi
-	AC_LANG_POP([C])
+  AC_LANG_PUSH([C])
+  AC_CHECK_LIB([GL], [glFrustum])
+  AC_CHECK_LIB([GLU], [gluPerspective])
+  AC_MSG_CHECKING([if OpenGL is ok])
+  if test "x$ac_cv_lib_GL_glFrustum$ac_cv_lib_GLU_gluPerspective" = "xyesyes" ; then
+    AC_MSG_RESULT([yes])
+    AC_CONDITIONAL_DEFINE([$1], [yes])
+  elif test "x$2" = "xyes" ; then
+    AC_MSG_ERROR([no])
+    AC_CONDITIONAL_DEFINE([$1], [no])
+  else
+    AC_MSG_RESULT([no])
+    AC_CONDITIONAL_DEFINE([$1], [no])
+  fi
+  AC_LANG_POP([C])
 ])
 
-dnl Incorporate GLUT.
-dnl AC_INCORPORATE_GLUT([define on found], [obligatory])
+
+# Incorporate GLUT.
+# AC_INCORPORATE_GLUT([define on found], [obligatory])
 AC_DEFUN([AC_INCORPORATE_GLUT],
 [
-	AC_LANG_PUSH([C])
-	AC_SEARCH_LIBS([glutInit],
-		[glut],
-		glut=[yes],
-		glut=[no])
-	AC_INCORPORATE([GLUT], [$glut], [], [], [$1], [$2])
+  AC_LANG_PUSH([C])
+  AC_CHECK_LIB([glut], [glutInit])
+  AC_INCORPORATE([GLUT], [$ac_cv_lib_glut_glutInit], [], [], [$1], [$2])
+  AC_LANG_POP([C])
 ])
 
-dnl Require C standard.
-dnl AC_INCORPORATE_C99([define on found], [obligatory])
-AC_DEFUN([AC_REQUEST_C99],
-[
-	AC_PROG_CC_C99()
-	AC_MSG_CHECKING([for C99])
-	if test x$ac_cv_prog_cc_c99 != xno ; then
-		AC_MSG_RESULT([yes])
-		AC_CONDITIONAL_DEFINE([$1], [$ac_cv_prog_cc_c99])
-	else
-		if test x$obligatory == xyes ; then
-			AC_MSG_ERROR([no])
-		else
-			AC_MSG_RESULT([no])
-		fi
-	fi
+# As AC_CHECK_CC, but require C99 standard.
+# AC_INCORPORATE_C99([compilers])
+AC_DEFUN([AC_CHECK_C99],
+[
+  : ${CFLAGS=""}
+  AC_PROG_CC([$1])
+  AC_PROG_CC_C99([$1])
 ])
--- a/src/Makefile.am
+++ b/src/Makefile.am
@@ -1,3 +1,3 @@
-sae4_SOURCES = sae4.c
+stickanimationengine4000_by_faemiyah_SOURCES = sae4.c
 
-noinst_PROGRAMS = sae4
+bin_PROGRAMS = stickanimationengine4000-by-faemiyah
