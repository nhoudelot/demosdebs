--- a/Makefile
+++ b/Makefile
@@ -1,38 +1,57 @@
-CC = gcc-3.3
-COPT = -O1 -ffast-math -fno-inline -fmove-all-movables \
-       -fno-loop-optimize -fexpensive-optimizations -fpeephole2 -fshort-double -S
+SHELL = /bin/sh
+CC    = gcc
+CFLAGS += -Wall -ffast-math -fno-inline -fmove-all-movables -fno-loop-optimize -fexpensive-optimizations -fpeephole2 -fshort-double -S
+LDFLAGS  += -ldl -lSDL -lpthread -lm
 SOPT = -R .comment -R .note -R .note.ABI-tag -R .fini -R .gnu.version
 OBJ = syna_tiny.o tinymain.o osa.o minigl.o
+NASM = nasm
 
 # FULL = FULLSCREEN for fullscreen mode, something else for window
-FULL = FULLSCREEN
+FULL = bla
+RM_F = rm -f
 
-intro: $(OBJ)
-	$(CC) -o intro -nostdlib $(OBJ) -lSDL -lpthread -lm
-	strip $(SOPT) intro
-
-final: intro
-	gzip --best -f intro
-	cat unpack.header intro.gz > yellow_rose
-	rm intro.gz
-	chmod a+rx yellow_rose
-	ls -l yellow_rose
+prefix = /usr
+exec_prefix = $(prefix)
+bindir = $(exec_prefix)/bin
+
+INSTALL = install
+INSTALL_PROGRAM = $(INSTALL) -p    -o root -g root  -m  755
+INSTALL_DIR     = $(INSTALL) -p -d -o root -g root  -m  755
+TARGET=yellowroseoftexas-by-fit
+
+#parallel compilation if available
+ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
+ NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
+ MAKEFLAGS += -j$(NUMJOBS)
+endif
+
+export
+
+all: $(TARGET)
+
+$(TARGET): $(OBJ)
+	$(CC) -o $(TARGET) -nostdlib $(OBJ) $(LDFLAGS)
 
 syna_tiny.o: syna_tiny.asm
 	nasm -f elf syna_tiny.asm
 
 minigl.o: minigl.asm
-	nasm -f elf minigl.asm
+	$(NASM) -f elf minigl.asm
 
 tinymain.o: tinymain.asm
-	nasm -f elf -D$(FULL) tinymain.asm
+	$(NASM) -f elf -D$(FULL) tinymain.asm
 
 osa.o: osa.s
 	$(CC) -c $<
 
 %.o: %.c
-	$(CC) $(COPT) -c $<
-       
+	$(CC) $(CFLAGS) -c $<
+
 clean:
-	rm *.o intro yellow_rose *~
+	-@$(RM_F) *.o intro $(TARGET) *~
+
+install: $(TARGET)
+	$(INSTALL_DIR) $(DESTDIR)$(bindir)
+	-@$(RM_F) $(DESTDIR)$(bindir)/$(TARGET)
+	$(INSTALL_PROGRAM) $(TARGET) $(DESTDIR)$(bindir)
 
