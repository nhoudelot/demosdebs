Description: updating makefile
 updating makefile to make it more compatible with packaging
Author: Nicolas HOUDELOT <nicolas@demosdebs.org>
Applied-Upstream: no
Last-Update: 2020-05-01
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/Makefile
+++ b/Makefile
@@ -1,30 +1,34 @@
-PROJECT = xa-005-spike
-EXEC = $(PROJECT)
-CPPC = g++
-CC = gcc
+SHELL = /bin/sh
+CXX := g++
+CC := gcc
+PKG_CONFIG:=pkg-config
 
 # GUI --------------------------------------------------------------------------
 # GUI seems to freeze or crash on OSX :(, too close to release now, disabled.
 # Comment these if you want to compile on OSX
-GUIOPT = -DUSE_GUI `fltk-config --cxxflags`
-GUILIB = `fltk-config --ldstaticflags`
+GUIOPT = -DUSE_GUI $(shell fltk-config --cxxflags)
+GUILIB = $(shell fltk-config --ldstaticflags)
 
 # Compile flags ----------------------------------------------------------------
-FLAGS = -O2 -s -Wall -DNOFILE
+CFLAGS += -Wall -pipe -DNOFILE -std=gnu90
+CXXFLAGS += -Wall -pipe -DNOFILE -std=gnu++98 -fabi-version=2
 #FLAGS = -Wall -g -DDEVEL -DFILE_USAGE_LOG
+TARGET   = xa005spike-by-xangle
+#variable de nettoyage
+RM_F = rm -f
 
 # Use for OSX
 #FLAGS = -Wall -O2 -DNOFILE
 
 # Detect OS --------------------------------------------------------------------
-ifneq ($(strip $(shell $(CC) -v 2>&1 |grep "Linux")),)
-	LIB = `sdl-config --libs` -lGL -lGLU -lfmod-3.74 $(GUILIB)
-	INC = `sdl-config --cflags` -Iio/loaders/zlib -Iio/loaders/png $(GUIOPT)
+ifneq ($(strip $(shell $(CC) -v 2>&1 |grep "linux")),)
+	LDFLAGS += $(shell $(PKG_CONFIG) --libs sdl glu zlib libpng) -lfmod-3.75 $(GUILIB)
+	CFLAGS += $(shell $(PKG_CONFIG) --cflags sdl glu zlib libpng) $(GUIOPT)
 endif
 
 ifneq ($(strip $(shell $(CC) -v 2>&1 |grep "Apple")),)
-	LIB = -framework Cocoa -framework Carbon -framework OpenGL /usr/lib/libfmod.a -L/sw/lib -lSDL $(GUILIB)
-	INC = -Iio/loaders/zlib -Iio/loaders/png -I/sw/include $(GUIOPT)
+	LDFLAGS += -framework Cocoa -framework Carbon -framework OpenGL /usr/lib/libfmod.a -L/sw/lib -lSDL $(GUILIB)
+	CFLAGS += -Iio/loaders/zlib -Iio/loaders/png -I/sw/include $(GUIOPT)
 	OSXMAIN = ds/io/macosx/macosx_sdl.m
 endif
 
@@ -35,28 +39,52 @@
 	$(patsubst ds/%.cpp,ds/%.o,$(wildcard ds/*.cpp)) \
 	$(patsubst ds/utils/%.cpp,ds/utils/%.o,$(wildcard ds/utils/*.cpp)) \
 	$(patsubst ds/io/%.cpp,ds/io/%.o,$(wildcard ds/io/*.cpp)) \
-	$(patsubst ds/io/loaders/%.cpp,ds/io/loaders/%.o,$(wildcard ds/io/loaders/*.cpp)) 
+	$(patsubst ds/io/loaders/%.cpp,ds/io/loaders/%.o,$(wildcard ds/io/loaders/*.cpp))
 LIBOBJECTS = $(patsubst ds/io/loaders/zlib/%.c,ds/io/loaders/zlib/%.o,$(wildcard ds/io/loaders/zlib/*.c)) \
 	$(patsubst ds/io/loaders/png/%.c,ds/io/loaders/png/%.o,$(wildcard ds/io/loaders/png/*.c))
 
+#variables d'instalation
+INSTALL = install
+INSTALL_DIR     = $(INSTALL) -p -d -m  755
+INSTALL_PROGRAM = $(INSTALL) -p    -m  755
+INSTALL_DATA    = $(INSTALL) -p    -m  644
+
+
+prefix          = /usr
+exec_prefix     = $(prefix)
+bindir          = $(prefix)/bin
+datarootdir     = $(prefix)/share
+datadir         = $(prefix)/share/xa005spike-by-xangle
+
+#parallel compilation if available
+ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
+ NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
+ MAKEFLAGS += -j$(NUMJOBS)
+endif
+
+export
+
 %.o: %.cpp
-	@echo "CC	$?"
-	@$(CPPC) $(FLAGS) $(INC) -c $? -o $@
-	
+	$(CXX) $(CXXFLAGS) -c $? -o $@
+
 %.o: %.c
-	@echo "CC	$?"
-	@$(CC) $(INC) -O2 -s -c $? -o $@
-	
+	$(CC) $(CFLAGS) -c $? -o $@
+
 all: $(OBJECTS) $(LIBOBJECTS)
-	@echo "LD	$(EXEC)"
-	@$(CPPC) $(FLAGS) $(OBJECTS) $(LIBOBJECTS) $(OSXMAIN) -o $(EXEC) $(LIB) $(INC)
-	@rm -f $(EXEC)~
-	@wc -c $(EXEC)
-		
+	$(CXX) $(CXXFLAGS) $(OBJECTS) $(LIBOBJECTS) $(OSXMAIN) -o $(TARGET) $(LDFLAGS)
+	wc -c $(TARGET)
+
 clean:
-	@echo "RM	$(OBJECTS) $(LIBOBJECTS)"
-	@rm -f $(OBJECTS) $(LIBOBJECTS) &> /dev/null
+	-@$(RM_F) $(OBJECTS) $(LIBOBJECTS) &> /dev/null
+	-@$(RM_F) $(TARGET)~ $(TARGET)
 
 pclean:
-	@echo "RM	$(OBJECTS)"
-	@rm -f $(OBJECTS) &> /dev/null
+	-@$(RM_F) $(OBJECTS) &> /dev/null
+
+install: $(TARGET)
+	$(INSTALL_DIR) $(DESTDIR)$(bindir)
+	-@$(RM_F) $(DESTDIR)$(bindir)/$(TARGET)
+	$(INSTALL_PROGRAM) $(TARGET) $(DESTDIR)$(bindir)
+	#data
+	$(INSTALL_DIR) $(DESTDIR)$(datadir)
+	$(INSTALL_DATA) demo.xpk $(DESTDIR)$(datadir)
