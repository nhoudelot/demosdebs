Description: migrate to SDL2
 Migrate from SDL1.2 to SDL2
Author: Nicolas HOUDELOT <nicolas@demosdebs.org>
Applied-Upstream: no
Last-Update: 2024-05-06
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/Makefile
+++ b/Makefile
@@ -3,9 +3,9 @@
 CC         ?= gcc
 PKG_CONFIG := pkg-config
 RM_F       := rm -f
-CFLAGS 	   += -std=gnu90 -ffast-math -Wall -pipe $(shell $(PKG_CONFIG) --cflags sdl)
+CFLAGS 	   += -std=gnu90 -ffast-math -Wall -pipe $(shell $(PKG_CONFIG) --cflags sdl2)
 # Libraries for linking
-LDFLAGS  += $(shell $(PKG_CONFIG) --libs sdl) -lm
+LDFLAGS  += $(shell $(PKG_CONFIG) --libs sdl2) -lm
 
 # Final executable name
 TARGET   := dose2-by-mfx
--- a/main.c
+++ b/main.c
@@ -11,7 +11,7 @@
 #include "demo.h"
 #include "ogdecode.h"
 #include <math.h>
-#include <SDL/SDL.h>
+#include <SDL2/SDL.h>
 
 #ifdef OSX
 #include <SDL/SDL_main.h>
@@ -109,6 +109,10 @@
   int bufsiz;
   unsigned time0, timex;
   SDL_Surface *screen;
+  SDL_Surface *sdlTempSurface;
+  SDL_Renderer *sdlRenderer;
+  SDL_Window *sdlWindow;
+  SDL_Texture *sdlTexture;
   SDL_Color colors[256];
   static int graffa[160*480];
   static SDL_AudioSpec aanispex;
@@ -164,13 +168,15 @@
 #endif
 
   if(fullscreen)
-    screen=SDL_SetVideoMode(640, 480, 8, SDL_SWSURFACE|SDL_FULLSCREEN);//|SDL_DOUBLEBUF);
+    sdlWindow = SDL_CreateWindow("dose 2 by mfx",SDL_WINDOWPOS_CENTERED,SDL_WINDOWPOS_CENTERED,640,480,SDL_WINDOW_OPENGL|SDL_WINDOW_FULLSCREEN_DESKTOP);
   else
   {
-    screen=SDL_SetVideoMode(640, 480, 8, SDL_SWSURFACE);//|SDL_DOUBLEBUF);
-    SDL_WM_SetCaption("dose 2 by mfx",NULL);
+    sdlWindow = SDL_CreateWindow("dose 2 by mfx",SDL_WINDOWPOS_CENTERED,SDL_WINDOWPOS_CENTERED,640,480,SDL_WINDOW_OPENGL);
   }
 
+  sdlRenderer = SDL_CreateRenderer(sdlWindow, -1, SDL_RENDERER_PRESENTVSYNC);
+  screen = SDL_CreateRGBSurfaceWithFormat(0, 640, 480, 8,SDL_PIXELFORMAT_INDEX8); //video buffer
+  sdlTexture = SDL_CreateTextureFromSurface(sdlRenderer,screen); // texture with format from video buffer
   fprintf(stderr, "d2\n");
 //  screen=SDL_SetVideoMode(640, 480, 8, 0);
   SDL_ShowCursor(0);
@@ -251,19 +257,25 @@
       char *p=teepal1();
       static SDL_Color pp[256];
       for (i=0; i<256; i++) pp[i].r=p[i*3], pp[i].g=p[i*3+1], pp[i].b=p[i*3+2];
-      SDL_SetColors(screen, pp, 0, 256);
+      SDL_SetPaletteColors(screen->format->palette, pp, 0, 256);
     }
     //vid_closelfb(v);
 //    teepal2();
     SDL_UnlockSurface(screen);
-    SDL_Flip(screen);
-
-
+    sdlTempSurface = SDL_ConvertSurfaceFormat(screen,SDL_PIXELFORMAT_BGRA32,0);
+    SDL_UpdateTexture(sdlTexture, NULL, sdlTempSurface->pixels, sdlTempSurface->pitch); //update texture content with the surface
+	SDL_RenderClear(sdlRenderer);
+	SDL_RenderCopy(sdlRenderer, sdlTexture, NULL, NULL);
+	SDL_RenderPresent(sdlRenderer);
+	SDL_FreeSurface(sdlTempSurface);
     release();
   }
 
   SDL_CloseAudio();
-
+  SDL_FreeSurface(screen);
+  SDL_DestroyTexture(sdlTexture);
+  SDL_DestroyRenderer(sdlRenderer);
+  SDL_DestroyWindow(sdlWindow);
 
   ov_clear(&oggi);
   fclose(fp);
