Description: migrate to SDL2
 Migrate from SDL1.2 to SDL2
Author: Nicolas HOUDELOT <nicolas@demosdebs.org>
Last-Update: 2020-04-28
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/Makefile
+++ b/Makefile
@@ -1,7 +1,7 @@
 CC := gcc
 PKG_CONFIG:=pkg-config
-CFLAGS += $(shell $(PKG_CONFIG) --cflags sdl) -Wall -std=gnu90 -pipe
-LDFLAGS += -flto $(shell $(PKG_CONFIG) --libs sdl) -lm
+CFLAGS += $(shell $(PKG_CONFIG) --cflags sdl2) -Wall -std=gnu90 -pipe
+LDFLAGS += $(shell $(PKG_CONFIG) --libs sdl2) -lm
 OBJ = data.o kirjaimet2.o kokko.o maf.o main.o mosaic.o pallot.o plasma.o\
 ratas.o stripes.o video.o cool_mzx/cool_mzx.a
 
--- a/cool_mzx/cool_mzx.c
+++ b/cool_mzx/cool_mzx.c
@@ -12,7 +12,7 @@
 #include "cool_mzx.h"
 #include "sd_main.h"
 #include "pt.h"
-#include <SDL/SDL.h>
+#include <SDL2/SDL.h>
 
 extern int pt_curperiod[32],           // kanavan nykyinen periodi
            pt_curnote[32],             // kanavan nykyinen s√§vel
@@ -204,7 +204,7 @@
 	if(!laite)
 	{
 		SDL_Init(SDL_INIT_TIMER);
-		SDL_SetTimer(jacaja, timeri);
+		SDL_AddTimer(jacaja, timeri,NULL);
 		return;
 	}
 	SDL_PauseAudio(0);
@@ -281,7 +281,7 @@
 {
 	if(!laite)
 	{
-		SDL_SetTimer(0,NULL);
+		SDL_AddTimer(0, NULL,NULL);
 		return;
 	}
 
--- a/cool_mzx/sd_dsp16.c
+++ b/cool_mzx/sd_dsp16.c
@@ -9,7 +9,7 @@
          2.9.2002: Some minor cleaning for SDL
  */
 
-#include <SDL/SDL.h>
+#include <SDL2/SDL.h>
 #include <stdio.h>
 #include <stdlib.h>
 
--- a/main.c
+++ b/main.c
@@ -8,7 +8,7 @@
 #include "ratas.h"
 #include "cool_mzx/cool_mzx.h"
 
-#include <SDL/SDL.h>
+#include <SDL2/SDL.h>
 
 #include <stdio.h>
 #include <string.h>
@@ -85,13 +85,13 @@
 #else
 	unsigned *screen;
 #endif
-	int flags=SDL_HWSURFACE+SDL_DOUBLEBUF+SDL_FULLSCREEN;
+	int flags=SDL_WINDOW_FULLSCREEN;
 
 	if(argc==2)
 		if(!strcmp(argv[1],"-w"))
-			flags-=SDL_FULLSCREEN;
+			flags-=SDL_WINDOW_FULLSCREEN;
 	if(argv[0][strlen(argv[0])-1]=='w')
-		flags-=SDL_FULLSCREEN;
+		flags-=SDL_WINDOW_FULLSCREEN;
 
 	if(readall()!=0)
 	{
@@ -113,12 +113,18 @@
 	mzx_init();
 	mzx_get(musakki);
 
+	SDL_Window *sdlWindow;
+	SDL_Renderer *sdlRenderer;
+	SDL_Texture *sdlTexture;
+	sdlWindow = SDL_CreateWindow("Chrysler by Fit & Bandwagon",SDL_WINDOWPOS_CENTERED,SDL_WINDOWPOS_CENTERED,640,480,flags);
+	sdlRenderer = SDL_CreateRenderer(sdlWindow, -1, 0);
+
 #ifdef TRUE8BIT
-	s=SDL_SetVideoMode(640,480,8,flags);
+	s = SDL_CreateRGBSurface(0, 640, 480, 8,0, 0, 0, 0);
 #else
-	s=SDL_SetVideoMode(640,480,32,flags);
+	s = SDL_CreateRGBSurfaceWithFormat(0, 640, 480, 32,SDL_PIXELFORMAT_RGB888); //video buffer
+	sdlTexture = SDL_CreateTextureFromSurface(sdlRenderer,s); // texture with format from video buffer
 #endif
-	SDL_WM_SetCaption("Chrysler by Fit & Bandwagon",NULL);
 	SDL_ShowCursor(0);
 	screen=s->pixels;
 #ifdef TRUE8BIT
@@ -360,12 +366,19 @@
 
 		// For plain buffer:
 		//memcpy(&screen[24*320],displaybuf,320*192);
-		SDL_Flip(s);
+		SDL_UpdateTexture(sdlTexture, NULL, s->pixels, s->pitch);
+		SDL_RenderClear(sdlRenderer);
+		SDL_RenderCopy(sdlRenderer, sdlTexture, NULL, NULL);
+		SDL_RenderPresent(sdlRenderer);
 
 		//if(frame%20==0 && vbl)
 		//    printf("fps: %f\n",frame*50.0/vbl);
 	}
 
+	SDL_FreeSurface(s);
+	SDL_DestroyTexture(sdlTexture);
+	SDL_DestroyRenderer(sdlRenderer);
+	SDL_DestroyWindow(sdlWindow);
 	SDL_Quit();
 	return(0);
 }
