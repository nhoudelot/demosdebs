--- a/Makefile
+++ b/Makefile
@@ -3,7 +3,7 @@
 CC    := gcc
 CXX   := g++
 PKG_CONFIG:=pkg-config
-CXXFLAGS += -Wall -w -pipe -std=gnu++98 -fabi-version=2 $(shell $(PKG_CONFIG) sdl SDL_mixer --cflags)
+CXXFLAGS += -Wall -w -pipe -std=gnu++98 -fabi-version=2 $(shell $(PKG_CONFIG) sdl2 SDL2_mixer --cflags)
 TARGET   := borntro-by-insolitdust
 
 #variable de nettoyage
@@ -29,7 +29,7 @@
 
  $(TARGET): main.cc xmodelib.cc texturelib.cpp idscroller.cc timerlib.cpp
 	@echo Compiling Insolit Dust BoRnTrO
-	$(CXX) -o  $(TARGET) $(CXXFLAGS) main.cc xmodelib.cc texturelib.cpp idscroller.cc timerlib.cpp $(shell $(PKG_CONFIG) sdl SDL_mixer --libs)
+	$(CXX) -o  $(TARGET) $(CXXFLAGS) main.cc xmodelib.cc texturelib.cpp idscroller.cc timerlib.cpp $(shell $(PKG_CONFIG) sdl2 SDL2_mixer --libs)
 
 	@echo Build finished. Run ./borntro
 
--- a/main.cc
+++ b/main.cc
@@ -1,5 +1,5 @@
-#include <SDL/SDL.h>
-#include <SDL/SDL_mixer.h>
+#include <SDL2/SDL.h>
+#include <SDL2/SDL_mixer.h>
 #include <math.h>
 #include <unistd.h>
 
@@ -30,8 +30,6 @@
 	Video = new VgaXMode(FULLSCREEN);
 	DBuf = Video->GetVideoMem();
 
-	SDL_WM_SetCaption("InsolitDust BoRnTrO 2012", "borntro");
-
 	Font = new IDScroller("/usr/share/borntro-by-insolitdust/ID_Font_002_32x31.pcx", Video, 32, 31);
 
 	Font->YPosScroller = 208;
--- a/xmodelib.h
+++ b/xmodelib.h
@@ -31,7 +31,7 @@
 #ifndef XMODELIB_H
 #define XMODELIB_H
 
-#include <SDL/SDL.h>
+#include <SDL2/SDL.h>
 
 class VgaXMode
 {
@@ -43,6 +43,9 @@
 SDL_Color Palette[256];                                         //Main palette
 SDL_Color FadePalette[256];                                     //Palette used for fading
 char NewFade;                               //Uset to reset new fade effect
+SDL_Window *sdlWindow;
+SDL_Renderer *sdlRenderer;
+SDL_Texture *sdlTexture;
 
 public:
 VgaXMode(char FullScreen);                                      //Constructor, FullScreen = 1 to go in fullscreen mode
@@ -86,4 +89,4 @@
 void ResetFade(void);
 };
 
-#endif
\ No newline at end of file
+#endif
--- a/xmodelib.cc
+++ b/xmodelib.cc
@@ -40,43 +40,32 @@
 
 VgaXMode::VgaXMode(char FullScreen)
 {
-	SDL_VideoInfo vinfo;
 	Uint32 vmodeflags = 0;
 	int i;
 
 	//Set the best resolution mode possible
 
-	vmodeflags = SDL_DOUBLEBUF;
-
-	vinfo = *SDL_GetVideoInfo();
-
-	if (vinfo.hw_available == 0)
-		vmodeflags |= SDL_SWSURFACE;
-	else
-	if (vinfo.blit_sw == 0)
-		vmodeflags |= SDL_HWSURFACE;
-	else
-		vmodeflags |= SDL_SWSURFACE;
+	vmodeflags = SDL_WINDOW_OPENGL;
 
 	//Enable fullscreen mode if is required
 
 	if (FullScreen)
 	{
-		vmodeflags |= SDL_FULLSCREEN;
+		vmodeflags |= SDL_WINDOW_FULLSCREEN;
 
 		SDL_ShowCursor(0);
 	}
 
 	//Create the 640x480x256 main "window"
 
-	Video_Surface = SDL_SetVideoMode(640, 480, 8, vmodeflags);
-
-	if (Video_Surface == NULL)
-		exit(-1);
+	sdlWindow = SDL_CreateWindow("InsolitDust BoRnTrO 2012",SDL_WINDOWPOS_CENTERED,SDL_WINDOWPOS_CENTERED,640,480,vmodeflags);
+	sdlRenderer = SDL_CreateRenderer(sdlWindow, -1, SDL_RENDERER_PRESENTVSYNC);
+	Video_Surface = SDL_CreateRGBSurface(0, 640, 480, 8, 0, 0, 0, 0); //video buffer 8 bits
+	sdlTexture = SDL_CreateTextureFromSurface(sdlRenderer,Video_Surface);// texture from video buffer
 
 	//Create the 320x240x256 emulated video mode
 
-	Video_Memory = SDL_CreateRGBSurface(vmodeflags, 320, 240, 8, 0, 0, 0, 0);
+	Video_Memory = SDL_CreateRGBSurface(0, 320, 240, 8, 0, 0, 0, 0); //video buffer 8 bits
 
 	if (Video_Memory == NULL)
 		exit(-1);
@@ -112,12 +101,15 @@
 	SDL_Rect srcrect = {0, 0, 320, 240};
 	SDL_Rect dstrect = {0, 0, 640, 480};
 
-	SDL_SoftStretch(Video_Memory, &srcrect, Video_Surface, &dstrect);
-
 	if (SDL_MUSTLOCK(Video_Surface))
+	{
 		SDL_UnlockSurface(Video_Surface);
-	else
-		SDL_UpdateRect(Video_Surface, 0, 0, 0, 0);
+	} else {
+		SDL_UpdateTexture(sdlTexture, NULL, Video_Memory->pixels, Video_Memory->pitch); //update texture content with the surface
+		SDL_RenderClear(sdlRenderer);
+		SDL_RenderCopy(sdlRenderer, sdlTexture, &srcrect, &dstrect);
+		SDL_RenderPresent(sdlRenderer);
+	}
 }
 
 void VgaXMode::PutPixel(int x, int y, unsigned char col)
@@ -228,7 +220,7 @@
 {
 	//Enabled palette
 
-	SDL_SetColors(Video_Surface, Palette, 0, 256);
+	SDL_SetPaletteColors(Video_Surface->format->palette, FadePalette, 0, 256);
 }
 
 SDL_Color *VgaXMode::GetPalette(void)
@@ -402,7 +394,7 @@
 		return 1;
 	}
 
-	SDL_SetColors(Video_Surface, FadePalette, 0, 256);
+	SDL_SetPaletteColors(Video_Surface->format->palette, FadePalette, 0, 256);
 
 	return 0;
 }
@@ -465,7 +457,7 @@
 		return 1;
 	}
 
-	SDL_SetColors(Video_Surface, Palette, 0, 256);
+	SDL_SetPaletteColors(Video_Surface->format->palette, FadePalette, 0, 256);
 
 	return 0;
 }
@@ -473,4 +465,4 @@
 void VgaXMode::ResetFade(void)
 {
 	NewFade = 0;
-}
\ No newline at end of file
+}
