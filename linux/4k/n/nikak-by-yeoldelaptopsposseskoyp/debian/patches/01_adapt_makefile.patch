Description: updating makefile
 updating makefile to make it more compatible with packaging and crossbuilding
Author: Nicolas HOUDELOT <nicolas@demosdebs.org>
Applied-Upstream: no
Last-Update: 2024-03-28
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/Makefile
+++ b/Makefile
@@ -1,92 +1,67 @@
-.SUFFIXES:
-.DEFAULT:
+# compilers and tools
+SHELL      := /bin/sh
+CC         := gcc
+CXX        := g++
+NASM       := yasm
+PKG_CONFIG := pkg-config
+RM_F       := rm -f
+SHMIN	   := shader_minifier.exe
+
+# Flags
+CFLAGS   += -Wall -pipe -Wextra -pedantic -Werror=implicit-fallthrough -std=gnu99 -no-pie $(shell $(PKG_CONFIG) --cflags gl sdl)
+# Libraries for linking
+LDFLAGS  += $(shell $(PKG_CONFIG) --libs gl sdl) -lm -pthread -z noexecstack
+NASMFLAGS   ?=-f elf32
 
-CC ?= cc
-CXX ?= c++
-CFLAGS += -Wall -Wextra -Werror -pedantic -Iatto -O0 -g
-CXXFLAGS += -std=c++11 $(CFLAGS)
-LIBS = -lX11 -lXfixes -lGL -lasound -lm -pthread
-OBJDIR ?= .obj
-MIDIDEV ?= ''
 WIDTH ?= 1280
 HEIGHT ?= 720
-SHMIN=mono shader_minifier.exe
-INTRO=nikak
 
-DEPFLAGS = -MMD -MP
-COMPILE.c = $(CC) -std=gnu99 $(CFLAGS) $(DEPFLAGS) -MT $@ -MF $@.d
-COMPILE.cc = $(CXX) $(CXXFLAGS) $(DEPFLAGS) -MT $@ -MF $@.d
-
-all: run_tool
-
-$(OBJDIR)/%.c.o: %.c
-	@mkdir -p $(dir $@)
-	$(COMPILE.c) -c $< -o $@
-
-$(OBJDIR)/%.cc.o: %.cc
-	@mkdir -p $(dir $@)
-	$(COMPILE.cc) -c $< -o $@
-
-TOOL_EXE = $(OBJDIR)/tool/tool
-TOOL_SRCS = \
-	atto/src/app_linux.c \
-	atto/src/app_x11.c \
-	tool/syntmash.c \
-	tool/syntasm.c \
-	tool/parser.c \
-	tool/Automation.c \
-	tool/video.c \
-	tool/fileres.c \
-	tool/tool.c \
-	tool/audio.c \
-	tool/timeline.c
-TOOL_OBJS = $(TOOL_SRCS:%=$(OBJDIR)/%.o)
-TOOL_DEPS = $(TOOL_OBJS:%=%.d)
+# Final executable name
+TARGET   := nikak-by-yeoldelaptopsposseskoyp
 
--include $(TOOL_DEPS)
+# Install variables
+INSTALL := install
+INSTALL_DIR     := $(INSTALL) -p -d -m  755
+INSTALL_PROGRAM := $(INSTALL) -p    -m  755
+prefix          := /usr
+exec_prefix     := $(prefix)
+bindir          := $(prefix)/bin
 
-$(TOOL_EXE): $(TOOL_OBJS)
-	$(CXX) $(LIBS) $^ -o $@
 
-clean:
-	rm -f $(TOOL_OBJS) $(TOOL_DEPS) $(TOOL_EXE)
-	rm -f $(INTRO).sh $(INTRO).gz $(INTRO).elf $(INTRO) $(INTRO).dbg
+# Default target, builds the final executable
+all: $(TARGET)
 
-run_tool: $(TOOL_EXE)
-	$(TOOL_EXE) -w $(WIDTH) -h $(HEIGHT) -m $(MIDIDEV)
+# only for shaders
+%.h: %.glsl
+	$(SHMIN) -o $@ --no-renaming-list Z,T,P,X,k,F,t,E,PI,main --preserve-externals $<
 
-debug_tool: $(TOOL_EXE)
-	gdb --args $(TOOL_EXE) -w $(WIDTH) -h $(HEIGHT) -m $(MIDIDEV)
+shaders: raymarch.h blur_reflection.h composite.h dof_tap.h post.h
+# end of only for shaders
 
-$(INTRO).sh: linux_header $(INTRO).gz
-	cat linux_header $(INTRO).gz > $@
-	chmod +x $@
+# List of .c files to compile
+SRC_FILES = intro_c.c
 
-$(INTRO).gz: $(INTRO).elf
-	cat $< | 7z a dummy -tGZip -mx=9 -si -so > $@
+# List of corresponding .o files
+OBJ_FILES = $(SRC_FILES:.c=.o)
 
-%.h: %.glsl
-	$(SHMIN) -o $@ --no-renaming-list Z,T,P,X,k,F,t,E,PI,main --preserve-externals $<
+# Compiling each .c file into a .o file
+%.o: %.c
+	$(CC) $(CFLAGS) -MMD -MP -MT $@ -MF $@.d -c $< -o $@
 
 4klang.o: 4klang.asm 4klang.inc
-	nasm -f elf32 4klang.asm -o 4klang.o
+	$(NASM) $(NASMFLAGS) 4klang.asm -o 4klang.o
 
-#.h.seq: timepack
-#	timepack $< $@
+$(TARGET): 4klang.o $(OBJ_FILES)
+	$(CC) $(CFLAGS) -Wno-unknown-pragmas $^ $(LDFLAGS) -o $@
+	#sstrip $@
 
-#timepack: timepack.c
-#	$(CC) -std=c99 -Wall -Werror -Wextra -pedantic -lm timepack.c -o timepack
+clean:
+	$(RM_F) *.o
+	$(RM_F) $(TARGET)
 
-# '-nostartfiles -DCOMPACT' result in a libSDL crash on my machine (making older 1k/4k also crash) :(
-$(INTRO).elf: 4klang.o intro_c.c
-	$(CC) -m32 -Os -Wall -Wno-unknown-pragmas \
-		-DFULLSCREEN `pkg-config --cflags --libs sdl` -lGL \
-		$^ -o $@
-	sstrip $@
-
-$(INTRO).dbg: intro_c.c 4klang.o
-	$(CC) -m32 -O0 -g -Wall -Wno-unknown-pragmas \
-		`pkg-config --cflags --libs sdl` -lGL \
-		$^ -o $@
+install: $(TARGET)
+	$(INSTALL_DIR) $(DESTDIR)$(bindir)
+	-@$(RM_F) $(DESTDIR)$(bindir)/$(TARGET)
+	$(INSTALL_PROGRAM) $(TARGET) $(DESTDIR)$(bindir)
 
-.PHONY: all clean run_tool debug_tool
+.PHONY: clean shaders
