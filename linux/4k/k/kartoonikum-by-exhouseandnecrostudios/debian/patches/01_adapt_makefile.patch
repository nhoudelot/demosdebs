Description: updating makefile
 updating makefile to make it more compatible with packaging
Author: Nicolas HOUDELOT <nicolas@demosdebs.org>
Applied-Upstream: no
Last-Update: 2020-04-25
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/Makefile
+++ b/Makefile
@@ -3,13 +3,13 @@
 
 CHECK_OS = $(shell uname)
 ifeq ($(CHECK_OS),)
-PLATFORM = WIN32
+	PLATFORM = WIN32
 endif
 ifeq ($(CHECK_OS),Linux)
-PLATFORM = LINUX
+	PLATFORM = LINUX
 endif
 ifeq ($(CHECK_OS),Darwin)
-PLATFORM = OS_X
+	PLATFORM = OS_X
 endif
 
 #debuggie thingie
@@ -18,110 +18,121 @@
 USESDL = TRUE
 
 #compiler we're using
-CC = gcc
-CXX = g++
+CC := gcc
+CXX := g++
+PKG_CONFIG := pkg-config
 
 #sourcefiles in use
 OBJ = main.o
 # play.o synth.o
 
-TARGET = main
-LDFLAGS = -L./ -LC:\Dev-Cpp\lib
+TARGET = kartoonikum-by-exhouseandnecrostudios
+LDFLAGS +=
 INCLUDES = -Iinclude
-CFLAGS=
+CFLAGS +=
 
 #-fno-strict-aliasing
-CXXFLAGS =
-CCFLAGS =
+CXXFLAGS +=
+CCFLAGS +=
 #-msse -ftree-vectorize your friends
 #CFLAGS = -Os -fno-exceptions -fno-rtti $(INCLUDES)
-RELEASES = 
+RELEASES =
 
 ifeq ($(DEBUG),TRUE)
-CFLAGS += -D__DEBUG -ggdb -Wall
-#CFLAGS += -D__DEBUG -Wall
-CXXFLAGS += -pedantic -Wextra
+	CFLAGS += -D__DEBUG -ggdb -Wall
+	#CFLAGS += -D__DEBUG -Wall
+	CXXFLAGS += -pedantic -Wextra
 endif
 
 #Linux Makefile setup
 ifeq ($(PLATFORM), LINUX)
-CFLAGS += -DSDL
-ifeq ($(DEBUG),TRUE)
-CFLAGS += -ggdb -DDEBUG -fno-strict-aliasing -DX86_ASM -std=c99 -march=i686 $(shell sdl-config --cflags) $(INCLUDES)
-LDFLAGS += -lm `sdl-config --libs` -lGL -lGLU -L/usr/lib/ -L/usr/X11R6/lib/
-else
-CFLAGS += -Os -fmodulo-sched -fno-toplevel-reorder -fno-inline -fno-defer-pop -fno-keep-static-consts -fmerge-all-constants -fstrength-reduce -ffast-math -fomit-frame-pointer \
-	-fno-builtin -D__X11__ -DSDL -I/usr/include/GL/ $(shell sdl-config --cflags) -DX86_ASM -std=c99 -march=i386 $(INCLUDES)
-CFLAGS += $(ADDFLAGS)
-LDFLAGS += -nostdlib -nostartfiles -ldl -L/usr/lib/ -L/usr/X11R6/lib/
-endif
-INCLUDES += -Iinclude/GL -Iinclude/SDL
-
-
-
+	CFLAGS += -DSDL
+	ifeq ($(DEBUG),TRUE)
+		CFLAGS += -ggdb -DDEBUG -fno-strict-aliasing -std=c99 $(shell $(PKG_CONFIG) --cflags sdl) $(INCLUDES)
+		LDFLAGS += $(shell $(PKG_CONFIG) --libs sdl gl glu x11) -lm
+	else
+		CFLAGS += -Wall -pipe -fmodulo-sched -fno-toplevel-reorder -fno-inline -fno-defer-pop -fno-keep-static-consts -fmerge-all-constants -fstrength-reduce  \
+			-fno-builtin -D__X11__ -DSDL $(shell $(PKG_CONFIG) gl glu sdl --libs) -std=c99 $(INCLUDES)
+		CFLAGS += $(ADDFLAGS)
+		LDFLAGS += -nostdlib -nostartfiles -ldl -L/usr/lib/ $(shell $(PKG_CONFIG) x11 --libs)
+	endif
 endif
 
 #Mac OS X Makefile setup
 ifeq ($(PLATFORM), OS_X)
-CFLAGS += -Os -fno-strict-aliasing -DX86_ASM -std=c99 -march=i686 $(INCLUDES)
+	CFLAGS += -Os -fno-strict-aliasing -DX86_ASM -std=c99  $(INCLUDES)
 
-ifeq ($(DEBUG),TRUE)
-CFLAGS += `sdl-config --cflags`
-LDFLAGS += `sdl-config --libs` -lpng -lz -lSDL_mixer
-else
-OBJ += SDLMain.o
-CFLAGS += -isysroot /Developer/SDKs/MacOSX10.4u.sdk -arch ppc -arch i386
-LDFLAGS += -Wl,-syslibroot,/Developer/SDKs/MacOSX10.4u.sdk -arch ppc -arch i386 -framework SDL -framework Cocoa -framework OpenGL
-endif
-
-CFLAGS += -DOS_X -DSDL -I/System/Library/Frameworks/AGL.framework/Headers
-#for PowerPC - Intel crosscompilation use -arch switch
-#lipo tool can merge the binaries easily
-#CC = gcc-3.3
-#CXX = g++-3.3
-ENDIAN = $(shell uname -m)
+	ifeq ($(DEBUG),TRUE)
+		CFLAGS += `sdl-config --cflags`
+		LDFLAGS += `sdl-config --libs` -lpng -lz -lSDL_mixer
+	else
+		OBJ += SDLMain.o
+		CFLAGS += -isysroot /Developer/SDKs/MacOSX10.4u.sdk
+		LDFLAGS += -Wl,-syslibroot,/Developer/SDKs/MacOSX10.4u.sdk -arch ppc -arch i386 -framework SDL -framework Cocoa -framework OpenGL
+	endif
+
+	CFLAGS += -DOS_X -DSDL -I/System/Library/Frameworks/AGL.framework/Headers
+	#for PowerPC - Intel crosscompilation use -arch switch
+	#lipo tool can merge the binaries easily
+	#CC = gcc-3.3
+	#CXX = g++-3.3
+	ENDIAN = $(shell uname -m)
 
 endif
 
 #Windows Makefile setup
 ifeq ($(PLATFORM), WIN32)
-INCLUDES += -Iinclude/GL
-ifeq ($(USESDL), TRUE)
-CFLAGS += -Os -fno-strict-aliasing -DX86_ASM -std=c99 -march=i686 $(shell sdl-config --cflags) $(INCLUDES)
-INCLUDES += -Iinclude/SDL
-CFLAGS += -DSDL
-LDFLAGS += -lmingw32 -liberty -lglu32 -lopengl32 -lgdi32 -lm
-#ifeq ($(DEBUG),FALSE)
-CFLAGS += -Dmain=SDL_main
-LDFLAGS += -mwindows -lSDLmain
-#endif
-LDFLAGS += -lSDL
-else
-#CFLAGS += -Os -fno-strict-aliasing -DX86_ASM -std=c99 -march=i686 $(shell sdl-config --cflags) $(INCLUDES)
-#CFLAGS += -DWIN32 -Os -std=c99 $(INCLUDES)
-
-#CFLAGS += -DWIN32 -ffast-math -fexpensive-optimizations -fno-peephole -fno-defer-pop -Os -std=c99 $(INCLUDES)
-
-CFLAGS += -DWIN32 -Os -ffast-math -fexpensive-optimizations -fno-peephole -fno-defer-pop \
-	-fno-keep-static-consts -fmerge-all-constants -fstrength-reduce -fno-builtin \
-	-fno-strict-aliasing -DX86_ASM -std=c99 -march=i686 $(INCLUDES)
+	INCLUDES += -Iinclude/GL
+	ifeq ($(USESDL), TRUE)
+		CFLAGS += -Os -fno-strict-aliasing -DX86_ASM -std=c99  $(shell sdl-config --cflags) $(INCLUDES)
+		INCLUDES += -Iinclude/SDL
+		CFLAGS += -DSDL
+		LDFLAGS += -lmingw32 -liberty -lglu32 -lopengl32 -lgdi32 -lm
+		#ifeq ($(DEBUG),FALSE)
+		CFLAGS += -Dmain=SDL_main
+		LDFLAGS += -mwindows -lSDLmain
+		#endif
+		LDFLAGS += -lSDL
+	else
+		#CFLAGS += -Os -fno-strict-aliasing -DX86_ASM -std=c99 -march=i686 $(shell sdl-config --cflags) $(INCLUDES)
+		#CFLAGS += -DWIN32 -Os -std=c99 $(INCLUDES)
+
+		#CFLAGS += -DWIN32 -ffast-math -fexpensive-optimizations -fno-peephole -fno-defer-pop -Os -std=c99 $(INCLUDES)
+
+		CFLAGS += -DWIN32 -Os -ffast-math -fexpensive-optimizations -fno-peephole -fno-defer-pop \
+			-fno-keep-static-consts -fmerge-all-constants -fstrength-reduce -fno-builtin \
+			-fno-strict-aliasing -DX86_ASM -std=c99 $(INCLUDES)
 
 
-LDFLAGS += -s -lmingw32 -lopengl32 -lglu32 -lgdi32 -lkernel32 -luser32 -lm -lwinmm -mwindows -mno-cygwin -nostdlib -lmsvcrt
-endif
+		LDFLAGS += -s -lmingw32 -lopengl32 -lglu32 -lgdi32 -lkernel32 -luser32 -lm -lwinmm -mwindows -mno-cygwin -nostdlib -lmsvcrt
+	endif
 
-TARGET = main.exe
+	TARGET = main.exe
 endif
 
 .PHONY: all all-before all-after clean clean-custom
 all: all-before $(TARGET) all-after
 #define some system utilities
-RM = rm -f
+RM_F = rm -f
 CP = cp -R
 MKDIR = mkdir
+#variables d'instalation
+INSTALL := install
+INSTALL_DIR     := $(INSTALL) -p -d -m  755
+INSTALL_PROGRAM := $(INSTALL) -p    -m  755
+INSTALL_LIBS    := $(INSTALL) -p    -m  755
+INSTALL_DATA    := $(INSTALL) -p    -m  644
+INSTALL_DATAR   := cp -r
+INSTALL_SCRIPT  := $(INSTALL) -p    -m  755
+
+prefix          := /usr
+exec_prefix     := $(prefix)
+bindir          := $(prefix)/bin
+datarootdir     := $(prefix)/share
+datadir         := $(prefix)/share/kartoonikum-by-exhouseandnecrostudios
 
 clean:
-	 $(RM) $(OBJ) $(TARGET)
+	 -$(RM_F) $(OBJ) $(TARGET)
 
 %.o: %.m $(HEADERS)
 	$(CC) $(CFLAGS) $(CCFLAGS) -c $<
@@ -131,3 +142,8 @@
 
 $(TARGET): $(OBJ)
 	$(CC) -o $@ $(OBJ) $(LDFLAGS)
+
+install: $(TARGET)
+	$(INSTALL_DIR) $(DESTDIR)$(bindir)
+	-@$(RM_F) $(DESTDIR)$(bindir)/$(TARGET)
+	$(INSTALL_PROGRAM) $(TARGET) $(DESTDIR)$(bindir)
