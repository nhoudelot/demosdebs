Description: make window resizable
 make window resizable with correct aspect ratio
Author: Nicolas HOUDELOT <nicolas@demosdebs.org>
Applied-Upstream: no
Last-Update: 2024-03-26
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/source/heartburn.c
+++ b/source/heartburn.c
@@ -56,7 +56,7 @@
 # ifndef S_HEIGHT
 #  define S_HEIGHT 720
 # endif
-# define S_FLAGS SDL_WINDOW_FULLSCREEN|SDL_WINDOW_OPENGL
+# define S_FLAGS SDL_WINDOW_FULLSCREEN|SDL_WINDOW_OPENGL|SDL_WINDOW_RESIZABLE
 #else
 # ifndef S_WIDTH
 #  define S_WIDTH 1280
@@ -64,7 +64,7 @@
 # ifndef S_HEIGHT
 #  define S_HEIGHT 720
 # endif
-# define S_FLAGS SDL_WINDOW_OPENGL
+# define S_FLAGS SDL_WINDOW_OPENGL|SDL_WINDOW_RESIZABLE
 #endif
 
 // Max shaders log size
@@ -178,12 +178,16 @@
 # define TFO(i) transformFeedbacks[i]
 #endif
 
+#define DEMO_XASPECT 4.0f
+#define DEMO_YASPECT 3.0f
+
 // Direction
 static int curSeed = 0;
 static int transitionStart = 0x4000000;
 static int lcPos;
 
 char quit = 0;
+Uint32 windowID = SDL_GetWindowID(sdlWindow);
 
 #ifdef __linux__
 
@@ -563,6 +567,24 @@
 	drawLines( );
 }
 
+INLINE void resize_window(int x, int y, int w, int h)
+{
+    /* Prevent division by zero */
+    if (h == 0) h = 1;
+
+    float aspect = (float)w / (float)h;
+    if (aspect > DEMO_XASPECT / DEMO_YASPECT) {
+        int new_w = (int)((float)h * DEMO_XASPECT / DEMO_YASPECT);
+        x += (w - new_w) / 2;
+        w = new_w;
+    } else if (aspect < DEMO_XASPECT / DEMO_YASPECT) {
+        int new_h = (int)((float)w * DEMO_YASPECT / DEMO_XASPECT);
+        y += (h - new_h) / 2;
+        h = new_h;
+    }
+    glViewport(x, y, w, h);
+}
+
 
 #ifdef __linux__
 
@@ -648,6 +670,16 @@
 
 		SDL_GL_SwapWindow(sdlWindow);
 		while(SDL_PollEvent(&event)) {
+			if(event.type == SDL_WINDOWEVENT)
+			{
+				if (event.window.windowID == windowID)  {
+				    if (event.window.event == SDL_WINDOWEVENT_RESIZED)  {
+				        int new_w = event.window.data1;
+				        int new_h = event.window.data2;
+				        resize_window(0,0, new_w,new_h);
+				    }
+				}
+			}
 			/* exit on input */
 			if(event.type == SDL_QUIT || (event.type == SDL_KEYUP && (event.key.keysym.sym == SDLK_ESCAPE || event.key.keysym.sym == SDLK_q))) {
 				quit = 1;
