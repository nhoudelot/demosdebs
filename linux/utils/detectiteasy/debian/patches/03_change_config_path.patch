--- a/XOptions/xoptions.cpp
+++ b/XOptions/xoptions.cpp
@@ -177,7 +177,7 @@
     }
     else
     {
-        pSettings=new QSettings(getApplicationDataPath()+QDir::separator()+QString("%1").arg(g_sName),QSettings::IniFormat);
+        pSettings=new QSettings(getConfigPath()+QDir::separator()+QString("%1").arg(g_sName),QSettings::IniFormat);
     }
 
 #ifdef QT_DEBUG
@@ -468,6 +468,14 @@
     return sResult;
 }
 
+QString XOptions::getConfigPath()
+{
+    QString sResult;
+    sResult=QStandardPaths::writableLocation(QStandardPaths::AppConfigLocation);
+
+    return sResult;
+}
+
 void XOptions::setLastDirectory(QString sPathName)
 {
     QFileInfo fi(sPathName);
@@ -672,7 +680,7 @@
         pComboBox->addItem("English","");
         pComboBox->addItem("System","System");
 
-        QList<QString> listFileNames=getAllFilesFromDirectory(getApplicationLangPath(),"*.qm");
+        QList<QString> listFileNames=getAllFilesFromDirectory("/usr/share/detectiteasy/lang","*.qm");
 
         qint32 nNumberOfRecords=listFileNames.count();
 
@@ -697,7 +705,7 @@
     {
         pComboBox->addItem("Default","");
 
-        QList<QString> listFileNames=getAllFilesFromDirectory(getApplicationQssPath(),"*.qss");
+        QList<QString> listFileNames=getAllFilesFromDirectory("/usr/share/detectiteasy/qss","*.qss");
 
         qint32 nNumberOfRecords=listFileNames.count();
 
@@ -1210,7 +1218,7 @@
                 sResult=sApplicationDirPath.section("/",0,2);
             }
 
-            sResult+=QString("/usr/lib/%1").arg(qApp->applicationName());
+            sResult+=QString("/usr/share/detectiteasy").arg(qApp->applicationName());
         }
     }
     else
--- a/XOptions/xoptions.h
+++ b/XOptions/xoptions.h
@@ -26,6 +26,7 @@
 #include <QSettings>
 #include <QSysInfo>
 #include <QTranslator>
+#include <QStandardPaths>
 #ifdef QT_GUI_LIB
 #include <QApplication>
 #include <QCheckBox>
@@ -174,6 +175,7 @@
     static QList<QString> getAllFilesFromDirectory(QString sDirectory,QString sExtension);
     static bool checkNative();
     QString getApplicationDataPath();
+    static QString getConfigPath();
     static QString getTitle(QString sName,QString sVersion);
 #ifdef QT_GUI_LIB
     void setCheckBox(QCheckBox *pCheckBox,ID id);
