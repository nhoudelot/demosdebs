--- a/main.c
+++ b/main.c
@@ -4,8 +4,8 @@
 #include <stdio.h>
 #include <string.h>
 #include "signal.h"
-#include <SDL/SDL.h>
-#include <SDL/SDL_mixer.h>
+#include <SDL2/SDL.h>
+#include <SDL2/SDL_mixer.h>
 #include <math.h>
 
 
@@ -283,8 +283,11 @@
 //  OggVorbis_File oggi;
 	int bufsiz;
 	unsigned time0, timex;
-	SDL_Surface *screen;
-	SDL_Overlay *ovl;
+	SDL_Window *screen;
+	SDL_Renderer *sdlRenderer;
+	SDL_Texture *sdlTexture;
+	SDL_Surface *ovl;
+	/*SDL_Overlay *ovl;*/
 	SDL_Color colors[256];
 	static int graffa[320*200];
 	int effu=argc>1 ? atoi(argv[1]) : 0;
@@ -313,20 +316,28 @@
 	/*
 	if -w argument in command line, don't go fullscreen
 	*/
-	int flags=SDL_HWSURFACE+SDL_FULLSCREEN;
+	int flags=SDL_WINDOW_FULLSCREEN;
 	if(argc==2)
 	{
-		if(!strcmp(argv[1],"-w")){flags-=SDL_FULLSCREEN;}
+		if(!strcmp(argv[1],"-w")){flags-=SDL_WINDOW_FULLSCREEN;}
 	}
-	if(argv[0][strlen(argv[0])-1]=='w') {flags-=SDL_FULLSCREEN;}
+	if(argv[0][strlen(argv[0])-1]=='w') {flags-=SDL_WINDOW_FULLSCREEN;}
 
-	screen=SDL_SetVideoMode(640, 480, 32, flags);
-	SDL_WM_SetCaption("fortnight by mfx",NULL);
+	/* screen=SDL_SetVideoMode(640, 480, 32, flags);*/
+	screen = SDL_CreateWindow("fortnight by mfx",
+                          SDL_WINDOWPOS_UNDEFINED,
+                          SDL_WINDOWPOS_UNDEFINED,
+                          640, 480,
+                          flags);
+	/* SDL_WM_SetCaption("fortnight by mfx",NULL);*/
 	fprintf(stderr, "d2\n");
-	SDL_ShowCursor(0);
+	SDL_ShowCursor(1);
 	fprintf(stderr, "d3\n");
 
-	ovl=SDL_CreateYUVOverlay(320, 240, SDL_IYUV_OVERLAY, screen);
+	sdlRenderer = SDL_CreateRenderer(screen, -1, SDL_RENDERER_PRESENTVSYNC);
+	ovl = SDL_CreateRGBSurfaceWithFormat(0, 320, 240, 32,SDL_PIXELFORMAT_IYUV);
+	sdlTexture = SDL_CreateTextureFromSurface(sdlRenderer,ovl);
+	/*ovl=SDL_CreateYUVOverlay(320, 240, SDL_IYUV_OVERLAY, screen);*/
 
 	for (i=0; i<16384; i++) numbs[i]=1+(rand()*(1./RAND_MAX));
 
@@ -344,7 +355,6 @@
 		printf("SDL_Init: %s\n", SDL_GetError());
 		exit(1);
 	}
-
 // open 44.1KHz, signed 16bit, system byte order,
 //      stereo audio, using 1024 byte chunks
 	if(Mix_OpenAudio(44100, MIX_DEFAULT_FORMAT, MIX_DEFAULT_CHANNELS, 1024) == -1) //Initialisation de l'API Mixer
@@ -409,7 +419,7 @@
 		}
 
 		j=rand();
-		SDL_LockYUVOverlay(ovl);
+		/*SDL_LockYUVOverlay(ovl);*/
 /*    for (i=0; i<640*480; i++) {
       ovl->pixels[0][i]=64;//74+((j=j*35345243+1)>>25);
     }*/
@@ -419,7 +429,7 @@
 			signed char *p3;
 			static int flipflop=0;
 			for (y=0; y<120; y++) {
-				for (p0=ovl->pixels[0]+y*640, p1=ovl->pixels[1+flipflop]+y*160, p3=(flipflop ? V : U)+y*160, x=0; x<160; x++, p0+=8, p1+=4, p3+=4) {
+				for (p0=ovl->pixels+y*640, p1=ovl->pixels+y*160, p3=(flipflop ? V : U)+y*160, x=0; x<160; x++, p0+=8, p1+=4, p3+=4) {
 					p1[0]=((p1[0]-128)*28*128+p3[0]*2*p0[0]+512>>12)+128;
 					p1[1]=((p1[1]-128)*28*128+p3[1]*2*p0[1]+512>>12)+128;
 					p1[2]=((p1[2]-128)*28*128+p3[2]*2*p0[2]+512>>12)+128;
@@ -458,10 +468,10 @@
       }*/
 		}
 		gounter=0;
-		if (!effu) desing(ovl->pixels[0], ovl->pitches[0], 320, 240, /*module->sngpos+fmod(*/ timex*(1./1000/60*125/16*6/6.5) /*, 1)*/);
-		if (effu&1) rend((char *)ovl->pixels[0], ovl->pitches[0], 320, 224, tsot, 5);
-//    rend(ovl->pixels[0], ovl->pitches[0], 320, 240, tsot, 3);
-		if (effu&2) getframe((char *)ovl->pixels[0], ovl->pitches[0], mov, 320, 240, timex*8);
+		if (!effu) desing(ovl->pixels, ovl->pitch, 320, 240, /*module->sngpos+fmod(*/ timex*(1./1000/60*125/16*6/6.5) /*, 1)*/);
+		if (effu&1) rend(ovl->pixels, ovl->pitch, 320, 224, tsot, 5);
+//    rend(ovl->pixels[0], ovl->pitch[0], 320, 240, tsot, 3);
+		if (effu&2) getframe(ovl->pixels, ovl->pitch, mov, 320, 240, timex*8);
 		if (effu&4) {
 			short buf[64000], *s;
 			int x, y;
@@ -470,7 +480,7 @@
 			teesumu(buf, timex*.03);
 			for (x=0; x<1024; x++) tab[x]=sqrt(x*63.9);
 			for (y=0; y<360; y++) {
-				d=(char *)ovl->pixels[0]+y*ovl->pitches[0];
+				d=ovl->pixels+y*ovl->pitch;
 				s=buf+(y>>1)*160;
 				for (x=0; x<160; x++, s++) {
 					int c=*s>>4;
@@ -480,12 +490,17 @@
 				}
 			}
 		}
-		if (effu&8) foofoo(ovl->pixels[0], ovl->pitches[0], 320, 240, 128);
+		if (effu&8) foofoo(ovl->pixels, ovl->pitch, 320, 240, 128);
 //    printf("%i\n", gounter);
-		SDL_UnlockYUVOverlay(ovl);
-
+		/* SDL_UnlockYUVOverlay(ovl); */
+		SDL_UpdateTexture(sdlTexture, NULL, ovl->pixels, ovl->pitch);
+		SDL_RenderClear(sdlRenderer);
 		rectum.x=0; rectum.y=0; rectum.w=640; rectum.h=480;
-		SDL_DisplayYUVOverlay(ovl, &rectum);
+		SDL_RenderCopy(sdlRenderer, sdlTexture, NULL, NULL);
+		SDL_RenderPresent(sdlRenderer);
+
+		
+		/*SDL_DisplayYUVOverlay(ovl, &rectum);*/
 	}
 
 	//SDL_CloseAudio();
@@ -493,6 +508,10 @@
 	Mix_PauseMusic();
 	Mix_FreeMusic(musique);
 	Mix_CloseAudio();
+	SDL_FreeSurface(ovl);
+	SDL_DestroyTexture(sdlTexture);
+	SDL_DestroyRenderer(sdlRenderer);
+	SDL_DestroyWindow(screen);
 
 	return 0;
 }
--- a/Makefile
+++ b/Makefile
@@ -1,10 +1,10 @@
 SHELL = /bin/sh
 CC := gcc
 NASM := yasm
-NASMFLAGS   ?=-f elf32
+NASMFLAGS   ?=-f elf64
 PKG_CONFIG:=pkg-config
-CFLAGS += -O3 -Wall -ffast-math -fforce-addr -fstrength-reduce -fno-expensive-optimizations -fschedule-insns2 $(shell $(PKG_CONFIG) sdl SDL_mixer --cflags) -std=gnu90
-LDFLAGS += $(shell $(PKG_CONFIG) sdl SDL_mixer --libs) -lm
+CFLAGS += -O3 -Wall -ffast-math -fforce-addr -fstrength-reduce -fno-expensive-optimizations -fschedule-insns2 $(shell $(PKG_CONFIG) sdl2 SDL2_mixer --cflags) -std=gnu90
+LDFLAGS += $(shell $(PKG_CONFIG) sdl2 SDL2_mixer --libs) -lm
 RM_F = rm -f
 
 TARGET=fortnight-by-mfx
