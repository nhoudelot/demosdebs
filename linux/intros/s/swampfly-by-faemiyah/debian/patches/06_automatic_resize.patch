Description: make window resizable
 make window resizable with correct ratio
Author: Nicolas HOUDELOT <nicolas@demosdebs.org>
Applied-Upstream: no
Last-Update: 2020-04-28
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/
--- a/src/swamp_fly.c
+++ b/src/swamp_fly.c
@@ -138,6 +138,7 @@
 "glShaderSource\0"
 "glTexEnvi\0"
 "glUseProgram\0\0"
+"glViewport\0"
 "libGLU.so\0"
 "gluLookAt\0"
 "gluPerspective\0\0"
@@ -154,6 +155,7 @@
 "SDL_GL_CreateContext\0"
 "SDL_GL_DeleteContext\0"
 "SDL_DestroyWindow\0"
+"SDL_GetWindowID\0"
 "SDL_ShowCursor\0\0";
 
 #define dsinf sinf
@@ -178,6 +180,7 @@
 #define dlShaderSource glShaderSource
 #define dlTexEnvi glTexEnvi
 #define dlUseProgram glUseProgram
+#define dlViewport glViewport
 
 #define dluLookAt gluLookAt
 #define dluPerspective gluPerspective
@@ -192,9 +195,13 @@
 #define DDL_GL_CreateContext SDL_GL_CreateContext
 #define DDL_GL_DeleteContext SDL_GL_DeleteContext
 #define DDL_DestroyWindow SDL_DestroyWindow
+#define DDL_GetWindowID SDL_GetWindowID
 #define DDL_ShowCursor SDL_ShowCursor
 #define DDL_Quit SDL_Quit
 
+#define DEMO_XASPECT 16.0f
+#define DEMO_YASPECT 9.0f
+
 #else
 
 /* To understand this, you need to realize that all function names are
@@ -240,6 +247,28 @@
 #endif
 /** \endcond */
 
+
+IFUNCTION void resize(int x, int y, int w, int h)
+{
+	/* Prevent division by zero */
+	if (h == 0) {
+		h = 1;
+	}
+
+	float aspect = (float)w / (float)h;
+	if (aspect > DEMO_XASPECT / DEMO_YASPECT) {
+		int new_w = (int)((float)h * DEMO_XASPECT / DEMO_YASPECT);
+		x += (w - new_w) / 2;
+		w = new_w;
+	} else if (aspect < DEMO_XASPECT / DEMO_YASPECT) {
+		int new_h = (int)((float)w * DEMO_YASPECT / DEMO_XASPECT);
+		y += (h - new_h) / 2;
+		h = new_h;
+	}
+	dlViewport(x, y, w, h);
+}
+
+
 //######################################
 // rand() ##############################
 //######################################
@@ -1174,9 +1203,9 @@
   {
 #if defined(USE_LD)
 #if defined(SCREEN_F)
-    uint32_t sdl_flags = SDL_WINDOW_OPENGL | SDL_WINDOW_FULLSCREEN;
+    uint32_t sdl_flags = SDL_WINDOW_OPENGL | SDL_WINDOW_RESIZABLE| SDL_WINDOW_FULLSCREEN;
 #else
-    uint32_t sdl_flags = SDL_WINDOW_OPENGL;
+    uint32_t sdl_flags = SDL_WINDOW_OPENGL | SDL_WINDOW_RESIZABLE;
 #endif
     for(ii = 1; (ii < argc); ++ii)
     {
@@ -1310,6 +1339,7 @@
 #endif
 
   int quit = 0;
+  Uint32 windowID = DDL_GetWindowID(sdlWindow);
   while(!quit)
   {
     // Perform drawing.
@@ -1368,6 +1398,17 @@
 				case SDLK_q: quit++; break;
 			}
 		}
+		if(event.type == SDL_WINDOWEVENT)
+			{
+				if (event.window.windowID == windowID)  {
+					if (event.window.event == SDL_WINDOWEVENT_RESIZED)  {
+						int new_w = event.window.data1;
+						int new_h = event.window.data2;
+						resize(0,0, new_w,new_h);
+					}
+				}
+			}
+		}
     }
   }
 
